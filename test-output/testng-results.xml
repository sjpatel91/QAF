<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="2" passed="2">
  <reporter-output>
    <line>
      <![CDATA[<div style="display:block;margin-left:10px;"><div  class="teststeppass"><span class="teststeppass-label">T </span>When user requests 'get.employees.call'</div><div  class="teststeppass"><span class="teststeppass-label">T </span>Then response should have status code '200'</div><div style="display:block;margin-left:10px;"><div  class="pass"><span class="pass-label">P </span>Response Status
Expected: &lt;200&gt;
     Actual: was &lt;200&gt;</div></div><div  class="teststeppass"><span class="teststeppass-label">T </span>And response should have status 'OK'</div><div style="display:block;margin-left:10px;"><div  class="pass"><span class="pass-label">P </span>Response Status
Expected: equalToIgnoringCase("OK")
     Actual: was OK</div></div></div>]]>
    </line>
    <line>
      <![CDATA[<div style="display:block;margin-left:10px;"><div  class="teststeppass"><span class="teststeppass-label">T </span>When user requests 'get.employee.call'</div><div  class="teststeppass"><span class="teststeppass-label">T </span>Then response should have status code '400'</div><div style="display:block;margin-left:10px;"><div  class="pass"><span class="pass-label">P </span>Response Status
Expected: &lt;400&gt;
     Actual: was &lt;400&gt;</div></div><div  class="teststeppass"><span class="teststeppass-label">T </span>And response should have status 'BAD_REQUEST'</div><div style="display:block;margin-left:10px;"><div  class="pass"><span class="pass-label">P </span>Response Status
Expected: equalToIgnoringCase("BAD_REQUEST")
     Actual: was BAD_REQUEST</div></div></div>]]>
    </line>
  </reporter-output>
  <suite name="QAF Demo" duration-ms="1634" started-at="2020-05-17T05:56:54Z" finished-at="2020-05-17T05:56:55Z">
    <groups>
      <group name="WS">
        <method signature="scenarios.suite3.bdd.getEmps()[pri:1000, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8]" name="getEmps" class="com.qmetry.qaf.automation.step.client.Scenario"/>
        <method signature="scenarios.suite3.bdd.getEmps()[pri:1001, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" name="getEmps" class="com.qmetry.qaf.automation.step.client.Scenario"/>
      </group> <!-- WS -->
    </groups>
    <test name="WS Test" duration-ms="1634" started-at="2020-05-17T05:56:54Z" finished-at="2020-05-17T05:56:55Z">
      <class name="com.qmetry.qaf.automation.step.client.Scenario">
        <test-method status="PASS" signature="setupSuit(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="getEmps" name="setupSuit" is-config="true" duration-ms="16" started-at="2020-05-16T22:56:54Z" finished-at="2020-05-16T22:56:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@79b06cab]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSuit -->
        <test-method status="PASS" signature="setupTest(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="getEmps" name="setupTest" is-config="true" duration-ms="2" started-at="2020-05-16T22:56:54Z" finished-at="2020-05-16T22:56:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@79b06cab]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method status="PASS" signature="setup(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="getEmps" name="setup" is-config="true" duration-ms="0" started-at="2020-05-16T22:56:54Z" finished-at="2020-05-16T22:56:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@79b06cab]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setupMethod(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="getEmps" name="setupMethod" is-config="true" duration-ms="0" started-at="2020-05-16T22:56:54Z" finished-at="2020-05-16T22:56:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qmetry.qaf.automation.step.client.Scenario.scenario()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@79b06cab]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="PASS" signature="getEmps()[pri:1000, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8]" test-instance-name="getEmps" name="getEmps" duration-ms="1098" started-at="2020-05-16T22:56:54Z" description="Get all employees" finished-at="2020-05-16T22:56:55Z">
          <reporter-output>
            <line>
              <![CDATA[<div style="display:block;margin-left:10px;"><div  class="teststeppass"><span class="teststeppass-label">T </span>When user requests 'get.employees.call'</div><div  class="teststeppass"><span class="teststeppass-label">T </span>Then response should have status code '200'</div><div style="display:block;margin-left:10px;"><div  class="pass"><span class="pass-label">P </span>Response Status
Expected: &lt;200&gt;
     Actual: was &lt;200&gt;</div></div><div  class="teststeppass"><span class="teststeppass-label">T </span>And response should have status 'OK'</div><div style="display:block;margin-left:10px;"><div  class="pass"><span class="pass-label">P </span>Response Status
Expected: equalToIgnoringCase("OK")
     Actual: was OK</div></div></div>]]>
            </line>
          </reporter-output>
        </test-method> <!-- getEmps -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="getEmps" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-05-16T22:56:55Z" finished-at="2020-05-16T22:56:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@79b06cab]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=getEmps status=SUCCESS method=scenarios.suite3.bdd.getEmps()[pri:1000, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8] output=<div style="display:block;margin-left:10px;"><div  class="teststeppass"><span class="teststeppass-label">T </span>When user requests 'get.employees.call'</div><div  class="teststeppass"><span class="teststeppass-label">T </span>Then response should have status code '200'</div><div style="display:block;margin-left:10px;"><div  class="pass"><span class="pass-label">P </span>Response Status
Expected: &lt;200&gt;
     Actual: was &lt;200&gt;</div></div><div  class="teststeppass"><span class="teststeppass-label">T </span>And response should have status 'OK'</div><div style="display:block;margin-left:10px;"><div  class="pass"><span class="pass-label">P </span>Response Status
Expected: equalToIgnoringCase("OK")
     Actual: was OK</div></div></div>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="getEmps" name="afterClass" is-config="true" duration-ms="0" started-at="2020-05-16T22:56:55Z" finished-at="2020-05-16T22:56:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@79b06cab]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="setup(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="getEmps" name="setup" is-config="true" duration-ms="1" started-at="2020-05-16T22:56:55Z" finished-at="2020-05-16T22:56:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@79b06cab]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setupMethod(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="getEmps" name="setupMethod" is-config="true" duration-ms="0" started-at="2020-05-16T22:56:55Z" finished-at="2020-05-16T22:56:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qmetry.qaf.automation.step.client.Scenario.scenario()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@79b06cab]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="PASS" signature="getEmps()[pri:1001, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="getEmps" name="getEmps" duration-ms="445" started-at="2020-05-16T22:56:55Z" description="Get employee with id 1" finished-at="2020-05-16T22:56:55Z">
          <reporter-output>
            <line>
              <![CDATA[<div style="display:block;margin-left:10px;"><div  class="teststeppass"><span class="teststeppass-label">T </span>When user requests 'get.employee.call'</div><div  class="teststeppass"><span class="teststeppass-label">T </span>Then response should have status code '400'</div><div style="display:block;margin-left:10px;"><div  class="pass"><span class="pass-label">P </span>Response Status
Expected: &lt;400&gt;
     Actual: was &lt;400&gt;</div></div><div  class="teststeppass"><span class="teststeppass-label">T </span>And response should have status 'BAD_REQUEST'</div><div style="display:block;margin-left:10px;"><div  class="pass"><span class="pass-label">P </span>Response Status
Expected: equalToIgnoringCase("BAD_REQUEST")
     Actual: was BAD_REQUEST</div></div></div>]]>
            </line>
          </reporter-output>
        </test-method> <!-- getEmps -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="getEmps" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-05-16T22:56:55Z" finished-at="2020-05-16T22:56:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@79b06cab]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=getEmps status=SUCCESS method=scenarios.suite3.bdd.getEmps()[pri:1001, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9] output=<div style="display:block;margin-left:10px;"><div  class="teststeppass"><span class="teststeppass-label">T </span>When user requests 'get.employee.call'</div><div  class="teststeppass"><span class="teststeppass-label">T </span>Then response should have status code '400'</div><div style="display:block;margin-left:10px;"><div  class="pass"><span class="pass-label">P </span>Response Status
Expected: &lt;400&gt;
     Actual: was &lt;400&gt;</div></div><div  class="teststeppass"><span class="teststeppass-label">T </span>And response should have status 'BAD_REQUEST'</div><div style="display:block;margin-left:10px;"><div  class="pass"><span class="pass-label">P </span>Response Status
Expected: equalToIgnoringCase("BAD_REQUEST")
     Actual: was BAD_REQUEST</div></div></div>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="getEmps" name="afterClass" is-config="true" duration-ms="0" started-at="2020-05-16T22:56:55Z" finished-at="2020-05-16T22:56:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@79b06cab]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="getEmps" name="afterTest" is-config="true" duration-ms="1" started-at="2020-05-16T22:56:55Z" finished-at="2020-05-16T22:56:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@79b06cab]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuit(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="getEmps" name="afterSuit" is-config="true" duration-ms="1" started-at="2020-05-16T22:56:55Z" finished-at="2020-05-16T22:56:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@79b06cab]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuit -->
      </class> <!-- com.qmetry.qaf.automation.step.client.Scenario -->
    </test> <!-- WS Test -->
  </suite> <!-- QAF Demo -->
</testng-results>
